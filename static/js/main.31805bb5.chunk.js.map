{"version":3,"sources":["context/settings.js","context/auth.js","context/todo.js","components/auth/auth.js","components/settingsForm/settingsForm.js","components/header/header.js","hooks/form.js","components/form/form.js","components/list/list.js","components/todo/todo.js","components/login/login.js","App.js","index.js"],"names":["settingsContext","React","createContext","Settings","props","useState","displayCompleted","pageLimit","stateSettings","setStateSetting","submitFlag","setSubmitFlag","useEffect","JSON","parse","localStorage","getItem","console","log","state","Provider","value","children","authContext","Auth","isLoggedIn","setIsLoggedIn","email","capabilities","user","setUser","lofInFunction","username","password","a","superagent","post","set","base64","encode","response","validateMyToken","body","token","jwt","decode","cookie","save","tokenCookie","load","logOutFunction","remove","can","capability","includes","markAsLoggedIn","toDoContext","ToDoContextComponent","incomplete","setIncomplete","auth","useContext","doHaveCapabilities","condition","SettingsForm","handleCloseDrawer","settings","tempFlag","setTempFlag","onSubmit","e","preventDefault","pageSettings","target","setItem","stringify","checked","label","onChange","class","name","type","Header","toDoInfo","isOpen","setIsOpen","style","background","Group","Heading","Divider","className","icon","text","onClick","left","onClose","size","usePortal","hasBackdrop","canOutsideClickClose","Classes","DRAWER_BODY","DIALOG_BODY","useForm","callback","values","setValues","handleChange","event","persist","handleSubmit","Form","addItem","item","id","uuid","complete","difficulty","placeholder","defaultValue","min","max","List","toggleComplete","interactive","elevation","Elevation","TWO","assignee","toString","ToDo","localStorageList","localStorageCompletedList","list","setList","completedList","setCompletedList","pageElements","setPageElements","completedPageElements","setCompletedPageElements","currentPage1","setCurrentPage1","currentPage2","setCurrentPage2","pages1","setPages1","pages2","setPages2","fullList","map","completedItems","filter","updatedList","pagination","listArray","pagesSetter","arraySetter","currentpage","numberOfPages","Math","ceil","length","Array","from","v","k","array","stringChunkSize","res","chunkSize","Number","i","chunk","slice","push","incompleteCount","document","title","Container","Row","Col","setLocalStorage","pageNumber","padding","cursor","handleChangePage1","handleChangePage2","LogIn","App","Main","Component","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.31805bb5.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport const settingsContext = React.createContext();\n\nexport default function Settings(props) {\n\n    const [stateSettings, setStateSetting] = useState({\n        displayCompleted: false,\n        pageLimit: 4\n    });\n    const[submitFlag, setSubmitFlag] = useState(false);\n\n    useEffect(() => {\n        setStateSetting(JSON.parse(localStorage.getItem('pageSettingsContext')) || stateSettings);\n        console.log(stateSettings);\n    },[submitFlag]);\n\n    const state = {\n        displayCompleted: stateSettings.displayCompleted,\n        pageLimit: stateSettings.pageLimit,\n        submitFlag,\n        setSubmitFlag\n    }\n\n    return (\n        <settingsContext.Provider value={state}>\n            {props.children}\n        </settingsContext.Provider>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport superagent from 'superagent';\nimport base64 from 'base-64';\nimport jwt from 'jsonwebtoken';\nimport cookie from 'react-cookies';\n\nexport const authContext = React.createContext();\n\nfunction Auth(props) {\n    const BackendURL = 'https://jam3ey.herokuapp.com';\n    const [isLoggedIn, setIsLoggedIn] = useState(false); // HERE\n    const [user, setUser] = useState({ email: '', capabilities: [] });\n    \n    user.capabilities = ['read', 'create', 'update', 'delete'];\n\n    const lofInFunction = async (username, password) => {\n        try {\n            const response = await superagent.post(`${BackendURL}/signin`).set('authorization', `Basic ${base64.encode(`${username}:${password}`)}`);\n            console.log(response);\n            validateMyToken(response.body.token)\n        } catch (error) {\n            console.log(error);\n        }\n    }\n    const validateMyToken = (token) => {\n        if (token) {\n            let user = jwt.decode(token);\n            setIsLoggedIn(true);\n            setUser(user);\n            cookie.save('token', token);\n        } else {\n            setIsLoggedIn(false); // HERE\n            setUser({});\n        }\n    }\n\n    const logOutFunction = () => {\n        setIsLoggedIn(false);\n        setUser({});\n        cookie.remove('token');\n    }\n\n    const markAsLoggedIn = () => {\n        setIsLoggedIn(true);\n    }\n\n    const can = (capability) => {\n        return user?.capabilities?.includes(capability);\n    }\n\n    useEffect(() => {\n        const tokenCookie = cookie.load('token');\n        validateMyToken(tokenCookie);\n    }, [])\n\n    const state = {\n        isLoggedIn: isLoggedIn,\n        user: user,\n        lofInFunction: lofInFunction,\n        logOutFunction: logOutFunction,\n        can: can,\n        setUser: setUser,\n        markAsLoggedIn: markAsLoggedIn\n    }\n\n    return (\n        <authContext.Provider value={state}>\n            {props.children}\n        </authContext.Provider>\n    )\n}\n\nexport default Auth;\n","import React, {useState} from 'react';\n\nexport const toDoContext = React.createContext();\n\nexport default function ToDoContextComponent(props){\n    const [incomplete, setIncomplete] = useState(0);\n\n    const state = {\n        incomplete:incomplete,\n        setIncomplete: setIncomplete\n    }\n\n    return(\n        <toDoContext.Provider value={state}>\n            {props.children}\n        </toDoContext.Provider>\n    )\n}","import React, { useState, useContext } from 'react';\nimport { authContext } from '../../context/auth';\nimport { When } from 'react-if';\n\nexport default function Auth(props) {\n    const auth = useContext(authContext);\n    const isLoggedIn = auth.isLoggedIn;\n    const doHaveCapabilities = auth.can(props.capability)\n    return (\n        <>\n        <When condition={isLoggedIn && doHaveCapabilities}>\n            {props.children}\n        </When>\n        </>\n    )\n}\n","import React, { useEffect, useContext, useState } from 'react';\nimport { settingsContext } from '../../context/settings.js';\nimport { Button, Switch } from \"@blueprintjs/core\";\n\nexport default function SettingsForm(props) {\n    let { handleCloseDrawer } = props;\n    const settings = useContext(settingsContext);\n    const [tempFlag, setTempFlag] = useState(settings.displayCompleted);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        let pageSettings = {\n            displayCompleted: tempFlag,\n            pageLimit: e.target.pageLimit.value || settings.pageLimit\n        };\n        localStorage.setItem('pageSettingsContext', JSON.stringify(pageSettings));\n        settings.setSubmitFlag(!settings.submitFlag);\n        handleCloseDrawer();\n    }\n\n    const toggleSwitch = () => {\n        setTempFlag(tempFlag === true ? false : true);\n    }\n\n    return (\n\n        <form onSubmit={handleSubmit}>\n            <h4 data-testid='formHeader'>Page Settings</h4><hr/><br/>\n\n            <Switch checked={tempFlag === true} label=\"Display Completed\" onChange={toggleSwitch} /><br/>\n            <label class=\"bp3-label\">\n                <span>Items Per Page</span>\n                <input class=\"bp3-input\" name=\"pageLimit\" type=\"number\" /><br/>\n                <p><strong>Current Items Per Page: {settings.pageLimit}</strong></p>\n            </label><br/>\n            <label>\n                <Button class=\"bp3-button\" type=\"submit\">Save Changes</Button>\n            </label>\n        </form >\n    )\n}","import React, { useState, useContext } from 'react';\nimport { toDoContext } from '../../context/todo';\nimport Auth from '../auth/auth';\nimport { Button, Navbar, Classes, Drawer } from \"@blueprintjs/core\";\nimport SettingsForm from '../settingsForm/settingsForm';\nimport { authContext } from '../../context/auth';\nimport { When } from 'react-if';\n\nexport default function Header() {\n    const auth = useContext(authContext);\n    const toDoInfo = useContext(toDoContext);\n    const [isOpen, setIsOpen] = useState(false);\n\n    let handleCloseDrawer = () => {\n        setIsOpen(false);\n    }\n\n    return (\n        <>\n            <Navbar class=\"bp3-navbar bp3-dark\" style={{ background: '#008075' }}>\n                <Navbar.Group>\n                    <Navbar.Heading ><strong>ToDo List Manager</strong></Navbar.Heading>\n                    <Navbar.Divider />\n                    <Auth capability='read'>\n                        <strong>{toDoInfo.incomplete} items pending</strong>\n                    </Auth>\n                </Navbar.Group>\n                <Navbar.Group className=\"bp3-navbar-group bp3-align-right\">\n                    <When condition={!auth.isLoggedIn}>\n                        <Button className=\"bp3-minimal\" icon=\"log-in\" text=\"Login\" />\n                    </When>\n                    <When condition={auth.isLoggedIn}>\n                        <Button className=\"bp3-minimal\" icon=\"home\" text=\"Home\" />\n                        <Button className=\"bp3-minimal \" icon=\"cog\" text=\"Settings\" onClick={() => setIsOpen(true)} />\n                        <Button className=\"bp3-minimal\" icon=\"log-out\" text=\"Logout\" onClick={auth.logOutFunction} />\n                    </When>\n                </Navbar.Group>\n            </Navbar>\n\n            <Drawer style={{ left: '30' }}\n                isOpen={isOpen}\n                onClose={handleCloseDrawer}\n                size={'300px'}\n                usePortal={true}\n                hasBackdrop={true}\n                canOutsideClickClose={true}\n            >\n                <div className={Classes.DRAWER_BODY}>\n                    <div className={Classes.DIALOG_BODY}>\n                        <SettingsForm handleCloseDrawer={handleCloseDrawer} />\n                    </div>\n                </div>\n            </Drawer>\n        </>\n    )\n}\n","import { useState } from 'react';\n\nconst useForm = (callback) => {\n\n  const [values, setValues] = useState({});\n\n  const handleSubmit = (event) => {\n    if (event) event.preventDefault();\n    callback(values);\n  };\n  \n  const handleChange = (event) => {\n    event.persist();\n    setValues(values => ({ ...values, [event.target.name]: event.target.value }));\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n  };\n};\n\nexport default useForm;\n\n\n","import React from 'react';\nimport useForm from '../../hooks/form';\nimport { v4 as uuid } from 'uuid';\nimport { Button } from \"@blueprintjs/core\";\nimport './form.scss';\n\nexport default function Form(props) {\n    const { addItem } = props;\n    const { handleChange, handleSubmit } = useForm(submitNewItem);\n\n    function submitNewItem(item) {\n        item.id = uuid();\n        item.complete = false;\n        if (!item.difficulty) item.difficulty = 3;\n        addItem(item);\n    }\n\n    return (\n\n        <form id='newForm' onSubmit={handleSubmit}>\n\n            <h4 data-testid='formHeader'>Add a New ToDo</h4>\n\n            <label class=\"bp3-label\">\n                <span>Title</span>\n                <input class=\"bp3-input\" onChange={handleChange} name=\"text\" type=\"text\" placeholder=\"Item Details\" />\n            </label>\n\n            <label class=\"bp3-label\">\n                <span>Assigned To</span>\n                <input class=\"bp3-input\" onChange={handleChange} name=\"assignee\" type=\"text\" placeholder=\"Assignee Name\" />\n            </label>\n\n            <label class=\"bp3-label\">\n                <span>Difficulty</span>&nbsp;\n                <input onChange={handleChange} defaultValue={3} type=\"range\" min={1} max={5} name=\"difficulty\" />\n            </label>\n\n            <label>\n                <Button class=\"bp3-button\" type=\"submit\">Add Item</Button>\n            </label>\n        </form >\n    )\n}","import React from 'react';\nimport { Button, Card, Elevation } from \"@blueprintjs/core\";\nimport './list.scss';\nimport Auth from '../auth/auth';\n\nexport default function List(props) {\n    const { item, toggleComplete } = props;\n    return (\n        <>\n            <Card interactive={true} elevation={Elevation.TWO}>\n                <h5>{item.text}</h5>\n                <p>Assigned to: {item.assignee}</p>\n                <p>Difficulty: {item.difficulty}</p>\n                <Auth capability='update'>\n                    Completed: <Button class=\"bp3-button\" onClick={() => toggleComplete(item.id)}>{item.complete.toString()}</Button>\n                </Auth>\n            </Card>\n            {/* <hr /> */}\n            <br />\n        </>\n    )\n}\n\n","import React, { useEffect, useState, useContext } from 'react';\nimport { settingsContext } from '../../context/settings.js';\nimport { toDoContext } from '../../context/todo';\nimport { authContext } from '../../context/auth';\nimport './todo.scss';\nimport Form from '../form/form';\nimport List from '../list/list';\nimport Auth from '../auth/auth';\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Button } from \"@blueprintjs/core\";\n\nconst ToDo = () => {\n\n    const settings = useContext(settingsContext);\n    const toDoInfo = useContext(toDoContext);\n    const auth = useContext(authContext);\n    const localStorageList = JSON.parse(localStorage.getItem('list')) || [];\n    const localStorageCompletedList = JSON.parse(localStorage.getItem('completedList')) || [];\n    const [list, setList] = useState(localStorageList);\n    const [completedList, setCompletedList] = useState(localStorageCompletedList);\n    const [incomplete, setIncomplete] = useState([]);\n    const [pageElements, setPageElements] = useState([]);\n    const [completedPageElements, setCompletedPageElements] = useState([]);\n    const [currentPage1, setCurrentPage1] = useState(1);\n    const [currentPage2, setCurrentPage2] = useState(1);\n    const [pages1, setPages1] = useState([]);\n    const [pages2, setPages2] = useState([]);\n\n\n    function addItem(item) {\n        setList([item, ...list]);\n        setLocalStorage(list);\n    }\n\n    function setLocalStorage(list) {\n        localStorage.setItem('list', JSON.stringify(list));\n    }\n\n    function deleteItem(id) {\n        const items = list.filter(item => item.id !== id);\n        setList(items);\n    }\n\n    function toggleComplete(id) {\n        let fullList = [...list, ...completedList];\n        fullList.map(item => {\n            if (item.id === id) {\n                item.complete = !item.complete;\n            }\n            return item;\n        });\n        const completedItems = fullList.filter(item => item.complete);\n        setCompletedList([...completedItems]);\n        const updatedList = fullList.filter(item => !item.complete);\n        setList([...updatedList]);\n        localStorage.setItem('completedList', JSON.stringify([...completedItems]));\n        localStorage.setItem('list', JSON.stringify([...updatedList]));\n    }\n\n    function chunk(array, stringChunkSize) {\n        const res = [];\n        let chunkSize = Number(stringChunkSize);\n        for (let i = 0; i < array.length; i += chunkSize) {\n            const chunk = array.slice(i, i + chunkSize);\n            res.push(chunk);\n        }\n        return res;\n    }\n\n    function handleChangePage1(pageNumber) {\n        setCurrentPage1(pageNumber);\n    }\n\n    function handleChangePage2(pageNumber) {\n        setCurrentPage2(pageNumber);\n    }\n\n    function pagination(listArray, pagesSetter, arraySetter, currentpage) {\n        let numberOfPages = Math.ceil(listArray.length / settings.pageLimit);\n        let pagesArray = Array.from({ length: numberOfPages }, (v, k) => k + 1);\n        pagesSetter(pagesArray);\n        let chunks = chunk(listArray, settings.pageLimit);\n        arraySetter(chunks[currentpage - 1]);\n    }\n\n\n\n    useEffect(() => {\n        let incompleteCount = list.length;\n        setIncomplete(incompleteCount);\n        toDoInfo.setIncomplete(incompleteCount);\n        document.title = `To Do List: ${incomplete}`;\n        pagination(list, setPages1, setPageElements, currentPage1);\n        pagination(completedList, setPages2, setCompletedPageElements, currentPage2);\n    }, [list, completedList, currentPage1, currentPage2]);\n\n\n\n    return (\n        <>\n            {/* <Header incomplete={incomplete} /> */}\n\n            <Container id='homepage'>\n                <Row>\n                    <Col>\n                        <Auth capability='create'>\n                            <Form addItem={addItem} />\n                        </Auth>\n                    </Col>\n                    <Col>\n                        <Auth capability='read'>\n                            <h5>Uncompleted Tasks</h5>\n                            <div id='pageNumbers'>\n                                {pages1?.map(pageNumber => (\n                                    <div style={{ padding: '5px' }} >\n                                        <Button className=\"bp3-button\" style={{ cursor: 'pointer' }} onClick={() => handleChangePage1(pageNumber)}> {pageNumber} </Button>\n                                    </div>\n                                ))}\n                            </div>\n                            {pageElements?.map(item => (\n                                <List key={item.id} item={item} toggleComplete={toggleComplete} />\n                            ))}\n                            <br />\n                            {settings.displayCompleted && <div>\n                                <h5>Completed Tasks</h5>\n                                <div id='pageNumbers'>\n                                    {pages2?.map(pageNumber => (\n                                        <div style={{ padding: '5px' }} >\n                                            <Button className=\"bp3-button\" style={{ cursor: 'pointer' }} onClick={() => handleChangePage2(pageNumber)}> {pageNumber} </Button>\n                                        </div>\n                                    ))}\n                                </div>\n                                {completedPageElements?.map(item => (\n                                    <List key={item.id} item={item} toggleComplete={toggleComplete} />\n                                ))}\n                            </div>}\n                        </Auth>\n                    </Col>\n                </Row>\n            </Container>\n        </>\n    );\n};\n\nexport default ToDo;","import React, { useState, useContext } from 'react';\nimport { authContext } from '../../context/auth';\nimport { When } from 'react-if';\nimport './form.scss';\n\nexport default function LogIn() {\n    const auth = useContext(authContext);\n    const [user, setUser] = useState({\n        username: '',\n        password: ''\n    });\n\n    const handleChange = (e) => {\n        e.preventDefault();\n        setUser({ ...user, [e.target.name]: e.target.value });\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        auth.lofInFunction(user.username, user.password);\n    }\n    return (\n        <>\n            <When condition={!auth.isLoggedIn}>\n                    <form id='newForm' onSubmit={handleSubmit}>\n                        <h2>Log In Form</h2>\n                        <label class=\"bp3-label\">\n                            <span>username</span>\n                            <input class=\"bp3-input\" type=\"text\" name=\"username\" placeholder=\"username\" onChange={handleChange} />\n                        </label>\n                        <label class=\"bp3-label\">\n                            <span>password</span>\n                            <input class=\"bp3-input\" type=\"password\" name=\"password\" placeholder=\"password\" onChange={handleChange} />\n                        </label>\n\n                        <label>\n                            <button class=\"bp3-button\" type=\"submit\">login</button>\n                        </label>\n                        <label>\n                            <button class=\"bp3-button\" type=\"submit\" onClick={auth.markAsLoggedIn}>mark as logged in</button>\n                        </label>\n\n                    </form>\n            </When>\n            {/* <When condition={auth.isLoggedIn}>\n                <strong>{auth.user.email}</strong>\n                <button onClick={auth.logOutFunction}>logout</button>\n            </When> */}\n        </>\n    )\n}\n","import React from 'react';\nimport Settings from './context/settings';\nimport Auth from './context/auth';\nimport ToDoContextComponent from './context/todo';\nimport Header from './components/header/header';\nimport ToDo from './components/todo/todo';\nimport LogIn from './components/login/login';\nimport './App.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default function App() {\n  return (\n    <Auth>\n      <Settings>\n        <ToDoContextComponent>\n        <Header/>\n        <LogIn />\n        <ToDo />\n        </ToDoContextComponent>\n      </Settings>\n    </Auth>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App.js';\n\nimport 'normalize.css/normalize.css';\nimport '@blueprintjs/core/lib/css/blueprint.css';\n\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);"],"sourceRoot":""}