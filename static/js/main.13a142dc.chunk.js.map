{"version":3,"sources":["context/settings.js","components/header/header.js","hooks/form.js","components/form/form.js","components/list/list.js","components/todo/todo.js","App.js","index.js"],"names":["settingsContext","React","createContext","Settings","props","Provider","value","displayCompleted","pageLimit","sortField","children","header","incomplete","useForm","callback","useState","values","setValues","handleChange","event","persist","target","name","handleSubmit","preventDefault","Form","addItem","item","id","uuid","complete","difficulty","onSubmit","class","onChange","type","placeholder","defaultValue","min","max","List","toggleComplete","interactive","elevation","Elevation","TWO","href","text","assignee","onClick","toString","ToDo","settings","useContext","list","setList","setIncomplete","completedList","setCompletedList","pages","setPages","currentPage","setCurrentPage","pageElements","setPageElements","map","completedItems","filter","updatedList","useEffect","incompleteCount","length","document","title","numberOfPages","Math","ceil","pagesArray","Array","from","v","k","chunks","array","chunkSize","res","i","chunk","slice","push","pageNumber","style","cursor","handleChangePage","App","Main","Component","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.13a142dc.chunk.js","sourcesContent":["import React from 'react';\n\nexport const settingsContext = React.createContext();\n\nexport default function Settings(props){\n    const state = {\n        displayCompleted: true,\n        pageLimit: 3,\n        sortField: 'oldest to newest'\n    };\n    return(\n        <settingsContext.Provider value={state}>\n            {props.children}\n        </settingsContext.Provider>\n    )\n}\n\n\n\n// import React, { Component } from 'react';\n\n// export const settingsContext = React.createContext();\n\n// class settings extends Component {\n//     constructor(props){\n//         super(props);\n//         this.state = {\n//             isCompleted: true,\n//         }\n//     }\n//     render() {\n//         return (\n//             <settingsContext.Provider value={this.state}>\n//                {this.props.children} \n//             </settingsContext.Provider>\n//         )\n//     }\n// }\n\n// export default settings;","import React from 'react'\n\nfunction header(props) {\n    const { incomplete } = props;\n    return (\n        <header>\n            <h1>To List Manager</h1>\n            <h2>To Do List: {incomplete} items pending</h2>\n        </header>\n    )\n}\n\nexport default header\n","import { useState } from 'react';\n\nconst useForm = (callback) => {\n\n  const [values, setValues] = useState({});\n\n  const handleSubmit = (event) => {\n    if (event) event.preventDefault();\n    callback(values);\n  };\n\n  const handleChange = (event) => {\n    event.persist();\n    setValues(values => ({ ...values, [event.target.name]: event.target.value }));\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n  };\n};\n\nexport default useForm;","import React, { useEffect, useState, useContext } from 'react';\n// import { settingsContext } from '../../context/settings.js';\nimport useForm from '../../hooks/form';\nimport { v4 as uuid } from 'uuid';\nimport { Button } from \"@blueprintjs/core\";\n\nexport default function Form(props) {\n    const { addItem } = props;\n    const { handleChange, handleSubmit } = useForm(submitNewItem);\n\n    function submitNewItem(item) {\n        item.id = uuid();\n        item.complete = false;\n        if (!item.difficulty) item.difficulty = 3;\n        addItem(item);\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n\n            <h2>Add To Do Item</h2>\n\n            <label class=\"bp3-label\">\n                <span>To Do Item</span>\n                <input class=\"bp3-input\" onChange={handleChange} name=\"text\" type=\"text\" placeholder=\"Item Details\" />\n            </label>\n\n            <label class=\"bp3-label\">\n                <span>Assigned To</span>\n                <input class=\"bp3-input\" onChange={handleChange} name=\"assignee\" type=\"text\" placeholder=\"Assignee Name\" />\n            </label>\n\n            <label class=\"bp3-label\">\n                <span>Difficulty</span>\n                <input onChange={handleChange} defaultValue={3} type=\"range\" min={1} max={5} name=\"difficulty\" />\n            </label>\n\n            <label>\n                <Button class=\"bp3-button\" type=\"submit\">Add Item</Button>\n            </label>\n            </form >\n    )\n}","import React from 'react';\nimport { Button, Card, Elevation } from \"@blueprintjs/core\";\n\nexport default function List(props) {\n    const { item, toggleComplete } = props;\n    return (\n        <div >\n            <Card interactive={true} elevation={Elevation.TWO}>\n                <h5><a href=\"#\">{item.text}</a></h5>\n                <p>Assigned to: {item.assignee}</p>\n                <p>Difficulty: {item.difficulty}</p>\n                Completed: <Button class=\"bp3-button\" onClick={() => toggleComplete(item.id)}>{item.complete.toString()}</Button>\n            </Card>\n            {/* <hr /> */}\n            <br/>\n        </div>\n    )\n}\n\n","import React, { useEffect, useState, useContext } from 'react';\nimport { settingsContext } from '../../context/settings.js';\nimport './todo.scss';\nimport Header from '../header/header';\nimport Form from '../form/form';\nimport List from '../list/list';\n\nconst ToDo = () => {\n\n    const settings = useContext(settingsContext);\n    const [list, setList] = useState([]);\n    const [incomplete, setIncomplete] = useState([]);\n    const [completedList, setCompletedList] = useState([]);\n    const [pages, setPages] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [pageElements, setPageElements] = useState([]);\n\n    function addItem(item) {\n        setList([item, ...list]);\n    }\n\n    function deleteItem(id) {\n        const items = list.filter(item => item.id !== id);\n        setList(items);\n    }\n\n    function toggleComplete(id) {\n        list.map(item => {\n            if (item.id === id) {\n                item.complete = !item.complete;\n            }\n            return item;\n        });\n        const completedItems = list.filter(item => item.complete);\n        setCompletedList([...completedItems, ...completedList]);\n        const updatedList = list.filter(item => !item.complete);\n        setList(updatedList);\n    }\n\n    function chunk(array, chunkSize) {\n        const res = [];\n        for (let i = 0; i < array.length; i += chunkSize) {\n            const chunk = array.slice(i, i + chunkSize);\n            res.push(chunk);\n        }\n        return res;\n    }\n\n    function handleChangePage(pageNumber) {\n        setCurrentPage(pageNumber);\n    }\n\n    useEffect(() => {\n        let incompleteCount = list.length;\n        setIncomplete(incompleteCount);\n        document.title = `To Do List: ${incomplete}`;\n        let numberOfPages = Math.ceil(list.length / settings.pageLimit);\n        let pagesArray = Array.from({ length: numberOfPages }, (v, k) => k + 1);\n        setPages(pagesArray);\n        let chunks = chunk(list, settings.pageLimit);\n        setPageElements(chunks[currentPage - 1]);\n    }, [list, currentPage]);\n\n    return (\n        <>\n            <Header incomplete={incomplete}/>\n            <Form addItem={addItem} />\n            {pageElements?.map(item => (\n                <List key={item.id} item={item} toggleComplete={toggleComplete} />\n            ))}\n            <dev id='pageNumbers'>{pages.map(pageNumber => (\n                <p style={{cursor:'pointer'}} onClick={() => handleChangePage(pageNumber)}>{pageNumber}  &nbsp;</p>\n            ))}</dev>\n            {settings.displayCompleted && <div>\n                <h3>Completed list:</h3>\n                {completedList.map(item => (\n                    <List key={item.id} item={item} toggleComplete={toggleComplete} />\n                ))}\n            </div>}\n        </>\n    );\n};\n\nexport default ToDo;","import React from 'react';\nimport Settings from './context/settings';\nimport ToDo from './components/todo/todo';\n\nexport default function App(){\n  return(\n    <Settings>\n      <ToDo/>\n    </Settings>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App.js';\n\nimport 'normalize.css/normalize.css';\nimport '@blueprintjs/core/lib/css/blueprint.css';\n\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);"],"sourceRoot":""}